Microsoft (R) Macro Assembler Version 14.14.26429.4	    10/22/18 11:26:46
U10516045_ch6_1.asm					     Page 1 - 1


				.386
				.model flat, stdcall
				.stack 4096
				ExitProcess proto, dwExitCode:dword
				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .MODEL flat, stdcall
C:\Irvine\SmallWin.inc(11) : warning A4011:multiple .MODEL directives found : .MODEL ignored
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
 00000000			.data
 00000000 A7 DA AC 4F 20		buffer1		BYTE	"我是 u10516045 王冠中", 0
	   75 31 30 35 31
	   36 30 34 35 20
	   A4 FD AB 61 A4
	   A4 00
 00000016 BD D0 BF E9 A4		buffer2		BYTE	"請輸入 Random Number 的數量(少於50): ", 0
	   4A 20 52 61 6E
	   64 6F 6D 20 4E
	   75 6D 62 65 72
	   20 AA BA BC C6
	   B6 71 28 A4 D6
	   A9 F3 35 30 29
	   3A 20 00
 0000003C BD D0 BF E9 A4		buffer3		BYTE	"請輸入 Random Number 的 Lowerbound: ", 0
	   4A 20 52 61 6E
	   64 6F 6D 20 4E
	   75 6D 62 65 72
	   20 AA BA 20 4C
	   6F 77 65 72 62
	   6F 75 6E 64 3A
	   20 00
 00000061 BD D0 BF E9 A4		buffer4		BYTE	"請輸入 Random Number 的 Upperbound: ", 0
	   4A 20 52 61 6E
	   64 6F 6D 20 4E
	   75 6D 62 65 72
	   20 AA BA 20 55
	   70 70 65 72 62
	   6F 75 6E 64 3A
	   20 00
 00000086 BD D0 BF EF BE		buffer5		BYTE	"請選擇 (1) Selection Sort (2) Insertion Sort (3) Quick Sort (4) Exit", 0
	   DC 20 28 31 29
	   20 53 65 6C 65
	   63 74 69 6F 6E
	   20 53 6F 72 74
	   20 28 32 29 20
	   49 6E 73 65 72
	   74 69 6F 6E 20
	   53 6F 72 74 20
	   28 33 29 20 51
	   75 69 63 6B 20
	   53 6F 72 74 20
	   28 34 29 20 45
	   78 69 74 00
 000000CB 4D 61 6C 66 6F		buffer6		BYTE	"Malformed Input. Retry!", 0
	   72 6D 65 64 20
	   49 6E 70 75 74
	   2E 20 52 65 74
	   72 79 21 00
 000000E3  00000033 [			randArray	DWORD	51 DUP(0)
	    00000000
	   ]
 000001AF  00000033 [			targetArray	DWORD	51 DUP(0)
	    00000000
	   ]
 0000027B 00000000			itemcount	DWORD	?
 0000027F 00000000			lowerbound	DWORD	?
 00000283 00000000			upperbound	DWORD	?
 00000287 00000000			gap			DWORD	?
 0000028B 00				choice		BYTE	?

 00000000			.code
 00000000			main proc
 00000000  BA 00000000 R		mov edx, OFFSET buffer1
 00000005  E8 00000000 E		call WriteString
 0000000A  E8 00000000 E		call Crlf
 0000000F  BA 00000016 R		mov edx, OFFSET buffer2
 00000014  E8 00000000 E		call WriteString
 00000019  E8 00000000 E		call ReadInt
 0000001E  A3 0000027B R		mov itemcount, eax
 00000023  E8 00000000 E		call Crlf
 00000028  BA 0000003C R		mov edx, OFFSET buffer3
 0000002D  E8 00000000 E		call WriteString
 00000032  E8 00000000 E		call ReadInt
 00000037  A3 0000027F R		mov lowerbound, eax
 0000003C  E8 00000000 E		call Crlf
 00000041  BA 00000061 R		mov edx, OFFSET buffer4
 00000046  E8 00000000 E		call WriteString
 0000004B  E8 00000000 E		call ReadInt
 00000050  A3 00000283 R		mov upperbound, eax
 00000055  E8 00000000 E		call Crlf

 0000005A  E8 00000000 E		call Randomize
 0000005F  8B 0D 0000027B R		mov ecx, itemcount
 00000065  BE 00000000			mov esi, 0
 0000006A			L1:
 0000006A  8B 1D 0000027F R		mov ebx, lowerbound
 00000070  A1 00000283 R		mov eax, upperbound
 00000075  E8 0000012F			call BetterRandomRange
 0000007A  89 86 000000E3 R		mov randArray[esi], eax
 00000080  83 C6 04			add esi, TYPE randArray
 00000083  E2 E5			loop L1

 00000085  83 EE 04			sub esi, 4
 00000088  89 35 00000287 R		mov gap, esi
 0000008E			L3:
 0000008E  E8 00000000 E		call Clrscr
 00000093  BE 000000E3 R		mov esi, OFFSET randArray
 00000098  8B FE			mov edi, esi
 0000009A  03 3D 00000287 R		add edi, gap
 000000A0  E8 0000010E			call WriteIntegerArray

 000000A5  E8 00000000 E		call Crlf
 000000AA  BA 00000086 R		mov edx, OFFSET buffer5
 000000AF  E8 00000000 E		call WriteString
 000000B4  E8 00000000 E		call ReadChar
 000000B9  A2 0000028B R		mov choice, al
 000000BE  E8 00000000 E		call Crlf

 000000C3  3C 34			cmp al, '4'
 000000C5  0F 84 000000CD		jz L4

 000000CB  8B 0D 0000027B R		mov ecx, itemcount
 000000D1  BE 000000E3 R		mov esi, OFFSET randArray
 000000D6  BF 000001AF R		mov edi, OFFSET targetArray
 000000DB			L2:
 000000DB  8B 06			mov eax, [esi]
 000000DD  89 07			mov [edi], eax
 000000DF  83 C6 04			add esi, 4
 000000E2  83 C7 04			add edi, 4
 000000E5  E2 F4			loop L2

 000000E7  A0 0000028B R		mov al, choice
 000000EC  3C 31			cmp al, '1'
 000000EE  74 1E			jz no1
 000000F0  3C 32			cmp al, '2'
 000000F2  74 48			jz no2
 000000F4  3C 33			cmp al, '3'
 000000F6  74 72			jz no3
 000000F8  BA 000000CB R		mov edx, OFFSET buffer6
 000000FD  E8 00000000 E		call WriteString
 00000102  E8 00000000 E		call Crlf
 00000107  E8 00000000 E		call WaitMsg
 0000010C  EB 80			jmp L3

 0000010E			no1:
 0000010E  BE 000001AF R		mov esi, OFFSET targetArray
 00000113  8B FE			mov edi, esi
 00000115  03 3D 00000287 R		add edi, gap
 0000011B  E8 000000B0			call SelectionSort
 00000120  E8 00000000 E		call WaitMsg

 00000125  BE 000001AF R		mov esi, OFFSET targetArray
 0000012A  8B FE			mov edi, esi
 0000012C  03 3D 00000287 R		add edi, gap
 00000132  E8 0000007C			call WriteIntegerArray
 00000137  E9 FFFFFF52			jmp L3
 0000013C			no2:
 0000013C  BE 000001AF R		mov esi, OFFSET targetArray
 00000141  8B FE			mov edi, esi
 00000143  03 3D 00000287 R		add edi, gap
 00000149  E8 0000010F			call InsertionSort
 0000014E  E8 00000000 E		call WaitMsg

 00000153  BE 000001AF R		mov esi, OFFSET targetArray
 00000158  8B FE			mov edi, esi
 0000015A  03 3D 00000287 R		add edi, gap
 00000160  E8 0000004E			call WriteIntegerArray
 00000165  E9 FFFFFF24			jmp L3
 0000016A			no3:
 0000016A  BE 000001AF R		mov esi, OFFSET targetArray
 0000016F  8B FE			mov edi, esi
 00000171  03 3D 00000287 R		add edi, gap
 00000177  E8 00000084			call QuickSort
 0000017C  E8 00000000 E		call WaitMsg
 00000181  BE 000001AF R		mov esi, OFFSET targetArray
 00000186  8B FE			mov edi, esi
 00000188  03 3D 00000287 R		add edi, gap
 0000018E  E8 00000020			call WriteIntegerArray
 00000193  E9 FFFFFEF6			jmp L3
 00000198			L4:
 00000198  E8 00000000 E		call Crlf
 0000019D  E8 00000000 E		call WaitMsg
					invoke ExitProcess, 0
 000001A9			main endp

				;
 000001A9			BetterRandomRange PROC
				;
				;
				;
				;
				;
				;
				;
				;

 000001A9  2B C3			sub eax, ebx
 000001AB  E8 00000000 E		call RandomRange
 000001B0  03 C3			add eax, ebx
 000001B2  C3				ret
 000001B3			BetterRandomRange ENDP

				;
 000001B3			WriteIntegerArray PROC
				;
				;
				;
				;
				;
				;
				;

 000001B3			WIA:
 000001B3  8B 06			mov eax, [esi]
 000001B5  E8 00000000 E		call WriteInt
 000001BA  B0 2C			mov al, ','
 000001BC  E8 00000000 E		call WriteChar
 000001C1  B0 20			mov al, ' '
 000001C3  E8 00000000 E		call WriteChar
 000001C8  83 C6 04			add esi, 4
 000001CB  3B F7			cmp esi, edi
 000001CD  7E E4			jle WIA
 000001CF  C3				ret
 000001D0			WriteIntegerArray ENDP

				;
 000001D0			SelectionSort PROC
				;
				;
				;
				;
				;
 000001D0  8B DE			mov ebx, esi
 000001D2			BSL1:
 000001D2  56				push esi
 000001D3  57				push edi
 000001D4  E8 FFFFFFDA			call WriteIntegerArray
 000001D9  5F				pop edi
 000001DA  5E				pop esi
 000001DB  E8 00000000 E		call ReadChar
 000001E0  E8 00000000 E		call Crlf
 000001E5  8B 03			mov eax, [ebx]
 000001E7  53				push ebx
 000001E8			BSL2:
 000001E8  83 C3 04			add ebx, 4
 000001EB  3B 03			cmp eax, [ebx]
 000001ED  7E 02			jle BSL3
 000001EF  87 03			xchg eax, [ebx]
 000001F1			BSL3:
 000001F1  3B DF			cmp ebx, edi
 000001F3  7C F3			jl BSL2
 000001F5  5B				pop ebx
 000001F6  89 03			mov [ebx], eax
 000001F8  83 C3 04			add ebx, 4
 000001FB  3B DF			cmp ebx, edi
 000001FD  7C D3			jl BSL1
 000001FF  C3				ret
 00000200			SelectionSort ENDP

				;
 00000200			QuickSort PROC
				;
				;
				;
				;
				;
 00000200  56				push esi
 00000201  57				push edi
 00000202  BE 000001AF R		mov esi, OFFSET targetArray
 00000207  8B FE			mov edi, esi
 00000209  03 3D 00000287 R		add edi, gap
 0000020F  E8 FFFFFF9F			call WriteIntegerArray
 00000214  5F				pop edi
 00000215  5E				pop esi
 00000216  E8 00000000 E		call ReadChar
 0000021B  E8 00000000 E		call Crlf
 00000220  3B F7			cmp esi, edi
 00000222  73 38			jae QSL1
 00000224  56				push esi
 00000225  8B 07			mov eax, [edi]
 00000227  8B DE			mov ebx, esi
 00000229  83 EE 04			sub esi, 4
 0000022C			QSL2:
 0000022C  3B 03			cmp eax, [ebx]
 0000022E  7E 09			jle QSL3
 00000230  83 C6 04			add esi, 4
 00000233  8B 16			mov edx, [esi]
 00000235  87 13			xchg edx, [ebx]
 00000237  89 16			mov [esi], edx
 00000239			QSL3:
 00000239  83 C3 04			add ebx, 4
 0000023C  3B DF			cmp ebx, edi
 0000023E  75 EC			jnz QSL2
 00000240  83 C6 04			add esi, 4
 00000243  8B 16			mov edx, [esi]
 00000245  87 17			xchg edx, [edi]
 00000247  89 16			mov [esi], edx
 00000249  56				push esi
 0000024A  83 C6 04			add esi, 4
 0000024D  E8 FFFFFFAE			call QuickSort
 00000252  5F				pop edi
 00000253  5E				pop esi
 00000254  83 EF 04			sub edi, 4
 00000257  E8 FFFFFFA4			call QuickSort
 0000025C			QSL1:
 0000025C  C3				ret
 0000025D			QuickSort ENDP

				;
 0000025D			InsertionSort PROC
				;
				;
				;
				;
				;
 0000025D  8B DE			mov ebx, esi
 0000025F			ISL1:
 0000025F  56				push esi
 00000260  57				push edi
 00000261  E8 FFFFFF4D			call WriteIntegerArray
 00000266  5F				pop edi
 00000267  5E				pop esi
 00000268  E8 00000000 E		call ReadChar
 0000026D  E8 00000000 E		call Crlf
 00000272  8B C3			mov eax, ebx
 00000274  3B C7			cmp eax, edi
 00000276  77 26			ja ISL2
 00000278  8B 03			mov eax, [ebx]
 0000027A  53				push ebx
 0000027B  8B D3			mov edx, ebx
 0000027D  83 EA 04			sub edx, 4
 00000280			ISL4:
 00000280  3B D6			cmp edx, esi
 00000282  72 12			jb ISL3
 00000284  3B 02			cmp eax, [edx]
 00000286  73 0E			jae ISL3
 00000288  50				push eax
 00000289  8B 02			mov eax, [edx]
 0000028B  89 03			mov [ebx], eax
 0000028D  58				pop eax
 0000028E  83 EB 04			sub ebx, 4
 00000291  83 EA 04			sub edx, 4
 00000294  EB EA			jmp ISL4
 00000296			ISL3:
 00000296  89 03			mov [ebx], eax
 00000298  5B				pop ebx
 00000299  83 C3 04			add ebx, 4
 0000029C  EB C1			jmp ISL1
 0000029E			ISL2:
 0000029E  C3				ret
 0000029F			InsertionSort ENDP

				end main
Microsoft (R) Macro Assembler Version 14.14.26429.4	    10/22/18 11:26:46
U10516045_ch6_1.asm					     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000028C DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000029F DWord	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

BetterRandomRange  . . . . . . .	P Near	 000001A9 _TEXT	Length= 0000000A Public STDCALL
CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
InsertionSort  . . . . . . . . .	P Near	 0000025D _TEXT	Length= 00000042 Public STDCALL
  ISL1 . . . . . . . . . . . . .	L Near	 0000025F _TEXT	
  ISL4 . . . . . . . . . . . . .	L Near	 00000280 _TEXT	
  ISL3 . . . . . . . . . . . . .	L Near	 00000296 _TEXT	
  ISL2 . . . . . . . . . . . . .	L Near	 0000029E _TEXT	
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
QuickSort  . . . . . . . . . . .	P Near	 00000200 _TEXT	Length= 0000005D Public STDCALL
  QSL2 . . . . . . . . . . . . .	L Near	 0000022C _TEXT	
  QSL3 . . . . . . . . . . . . .	L Near	 00000239 _TEXT	
  QSL1 . . . . . . . . . . . . .	L Near	 0000025C _TEXT	
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SelectionSort  . . . . . . . . .	P Near	 000001D0 _TEXT	Length= 00000030 Public STDCALL
  BSL1 . . . . . . . . . . . . .	L Near	 000001D2 _TEXT	
  BSL2 . . . . . . . . . . . . .	L Near	 000001E8 _TEXT	
  BSL3 . . . . . . . . . . . . .	L Near	 000001F1 _TEXT	
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteIntegerArray  . . . . . . .	P Near	 000001B3 _TEXT	Length= 0000001D Public STDCALL
  WIA  . . . . . . . . . . . . .	L Near	 000001B3 _TEXT	
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000001A9 Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 0000006A _TEXT	
  L3 . . . . . . . . . . . . . .	L Near	 0000008E _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 000000DB _TEXT	
  no1  . . . . . . . . . . . . .	L Near	 0000010E _TEXT	
  no2  . . . . . . . . . . . . .	L Near	 0000013C _TEXT	
  no3  . . . . . . . . . . . . .	L Near	 0000016A _TEXT	
  L4 . . . . . . . . . . . . . .	L Near	 00000198 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
buffer1  . . . . . . . . . . . .	Byte	 00000000 _DATA	
buffer2  . . . . . . . . . . . .	Byte	 00000016 _DATA	
buffer3  . . . . . . . . . . . .	Byte	 0000003C _DATA	
buffer4  . . . . . . . . . . . .	Byte	 00000061 _DATA	
buffer5  . . . . . . . . . . . .	Byte	 00000086 _DATA	
buffer6  . . . . . . . . . . . .	Byte	 000000CB _DATA	
choice . . . . . . . . . . . . .	Byte	 0000028B _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gap  . . . . . . . . . . . . . .	DWord	 00000287 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
itemcount  . . . . . . . . . . .	DWord	 0000027B _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
lowerbound . . . . . . . . . . .	DWord	 0000027F _DATA	
magenta  . . . . . . . . . . . .	Number	 00000005h   
randArray  . . . . . . . . . . .	DWord	 000000E3 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
targetArray  . . . . . . . . . .	DWord	 000001AF _DATA	
upperbound . . . . . . . . . . .	DWord	 00000283 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   1 Warnings
	   0 Errors
