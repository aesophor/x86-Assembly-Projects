Microsoft (R) Macro Assembler Version 14.14.26429.4	    10/29/18 11:31:10
U10516045_ch6_2.asm					     Page 1 - 1


				.386
				.model flat, stdcall
				.stack 4096
				ExitProcess proto, dwExitCode:dword
				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .MODEL flat, stdcall
C:\Irvine\SmallWin.inc(11) : warning A4011:multiple .MODEL directives found : .MODEL ignored
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
 00000000			.data
 00000000 A7 DA AC 4F 20		buffer1		BYTE "我是 U10516045 王冠中", 0
	   55 31 30 35 31
	   36 30 34 35 20
	   A4 FD AB 61 A4
	   A4 00
 00000016 BD D0 BF E9 A4		buffer2		BYTE "請輸入選擇 (1) Hamming code Generation (2) Hamming Code Verification (3) Exit", 0
	   4A BF EF BE DC
	   20 28 31 29 20
	   48 61 6D 6D 69
	   6E 67 20 63 6F
	   64 65 20 47 65
	   6E 65 72 61 74
	   69 6F 6E 20 28
	   32 29 20 48 61
	   6D 6D 69 6E 67
	   20 43 6F 64 65
	   20 56 65 72 69
	   66 69 63 61 74
	   69 6F 6E 20 28
	   33 29 20 45 78
	   69 74 00
 00000064 49 6E 76 61 6C		buffer3		BYTE "Invalid Input, please retry.", 0
	   69 64 20 49 6E
	   70 75 74 2C 20
	   70 6C 65 61 73
	   65 20 72 65 74
	   72 79 2E 00
 00000081 BD D0 A6 62 A4		buffer4		BYTE "請在下一行輸入欲編碼的binary data string (2-前57位元)", 0
	   55 A4 40 A6 E6
	   BF E9 A4 4A B1
	   FD BD 73 BD 58
	   AA BA 62 69 6E
	   61 72 79 20 64
	   61 74 61 20 73
	   74 72 69 6E 67
	   20 28 32 2D AB
	   65 35 37 A6 EC
	   A4 B8 29 00
 000000B7 BF F9 BB 7E AA		buffer5		BYTE "錯誤的位元在位置", 0
	   BA A6 EC A4 B8
	   A6 62 A6 EC B8
	   6D 00
 000000C8 BD D0 A6 62 A4		buffer6		BYTE "請在下一行輸入欲處理的Hamming code binary string (5-前63位元)", 0
	   55 A4 40 A6 E6
	   BF E9 A4 4A B1
	   FD B3 42 B2 7A
	   AA BA 48 61 6D
	   6D 69 6E 67 20
	   63 6F 64 65 20
	   62 69 6E 61 72
	   79 20 73 74 72
	   69 6E 67 20 28
	   35 2D AB 65 36
	   33 A6 EC A4 B8
	   29 00
 00000106 A5 BF BD 54 00		buffer7		BYTE "正確", 0
 0000010B  00000040 [			CodedArray	BYTE 64 DUP(0)
	    00
	   ]
 0000014B 00000000			CodedLength DWORD ?
 0000014F  0000003A [			DataArray	BYTE 58 DUP(0)
	    00
	   ]
 00000189 00000000			DataLength	DWORD ?
 0000018D 00000000			HCLength	DWORD ?
 00000191 00				choice		BYTE ?
 00000192 31				ChoiceTable	BYTE '1'
 00000193  00000184 R						DWORD GenerateHamming
 00000197 = 00000005			EntrySize = ($ - ChoiceTable)
 00000197  32							BYTE '2'
 00000198  00000078 R						DWORD VerifyHamming
 0000019C = 00000002			NumberOfEntries = ($ - ChoiceTable) / EntrySize

 00000000			.code
 00000000			main proc
 00000000			L0:
 00000000  E8 00000000 E		call Clrscr
 00000005  BA 00000000 R		mov edx, OFFSET buffer1
 0000000A  E8 00000000 E		call WriteString
 0000000F  E8 00000000 E		call crlf
 00000014  BA 00000016 R		mov edx, OFFSET buffer2
 00000019  E8 00000000 E		call WriteString
 0000001E  E8 00000000 E		call ReadChar
 00000023  A2 00000191 R		mov choice, al
 00000028  E8 00000000 E		call Crlf

 0000002D  BB 00000192 R		mov ebx, OFFSET ChoiceTable
 00000032  B9 00000002			mov ecx, NumberOfEntries

 00000037			L1:
 00000037  3A 03			cmp al, [ebx]
 00000039  75 0A			jne L2
 0000003B  FF 53 01			call NEAR PTR [ebx+1]
 0000003E  E8 00000000 E		call WaitMsg
 00000043  EB BB			jmp L0
 00000045			L2:
 00000045  81 C3 00000005		add ebx, EntrySize
 0000004B  E2 EA			loop L1
 0000004D			L3:
 0000004D  3C 33			cmp al, '3'
 0000004F  74 16			je L4
 00000051  BA 00000064 R		mov edx, OFFSET buffer3
 00000056  E8 00000000 E		call WriteString
 0000005B  E8 00000000 E		call Crlf
 00000060  E8 00000000 E		call WaitMsg
 00000065  EB 99			jmp L0

 00000067			L4:
 00000067  E8 00000000 E		call Crlf
 0000006C  E8 00000000 E		call WaitMsg
					invoke ExitProcess, 0
 00000078			main endp

				;
 00000078			VerifyHamming PROC
				;
				;
				;
				;
				;
				;
				;
 00000078			VH1:
 00000078  BA 000000C8 R		mov edx, OFFSET buffer6
 0000007D  E8 00000000 E		call WriteString
 00000082  E8 00000000 E		call Crlf
 00000087  BA 0000010B R		mov edx, OFFSET CodedArray
 0000008C  B9 00000040			mov ecx, SIZEOF CodedArray
 00000091  E8 00000000 E		call ReadString
 00000096  A3 0000014B R		mov CodedLength, eax
 0000009B  E8 00000000 E		call Crlf
					.IF CodedLength < 5
 000000A9  BA 00000064 R			mov edx, OFFSET buffer3
 000000AE  E8 00000000 E			call WriteString
 000000B3  E8 00000000 E			call Crlf
 000000B8  EB BE				jmp VH1
					.ELSEIF CodedLength <= 7
 000000C5  C7 05 0000018D R			mov HCLength, 3
	   00000003
					.ELSEIF CodedLength <= 15
 000000DA  C7 05 0000018D R			mov HCLength, 4
	   00000004
					.ELSEIF CodedLength <= 31
 000000EF  C7 05 0000018D R			mov HCLength, 5
	   00000005
					.ELSE
 000000FB  C7 05 0000018D R			mov HCLength, 6
	   00000006
					.ENDIF
 00000105  BE 00000000			mov esi, 0
					.REPEAT
 0000010A  8A 86 0000010B R			mov al, CodedArray[esi]
						.IF !(al == 30h || al == 31h)
							.BREAK
						.ENDIF
 0000011A  46					inc esi
					.UNTIL esi == CodedLength
					.IF esi != CodedLength
 0000012B  BA 00000064 R			mov edx, OFFSET buffer3
 00000130  E8 00000000 E			call WriteString
 00000135  E8 00000000 E			call Crlf
 0000013A  E9 FFFFFF39				jmp VH1
					.ENDIF
 0000013F  B8 00000000			mov eax, 0
 00000144  B9 00000000			mov ecx, 0
					.REPEAT
 00000149  8A 99 0000010B R			mov bl, CodedArray[ecx]
 0000014F  41					inc ecx
						.IF bl == 31h
 00000155  33 C1					xor eax, ecx
						.ENDIF
					.UNTIL ecx == CodedLength
					.IF eax == 0
 00000163  BA 00000106 R			mov edx, OFFSET buffer7
 00000168  E8 00000000 E			call WriteString
					.ELSE
 0000016F  BA 000000B7 R			mov edx, OFFSET buffer5
 00000174  E8 00000000 E			call WriteString
 00000179  E8 00000000 E			call WriteDec
					.ENDIF
 0000017E  E8 00000000 E		call Crlf
 00000183  C3				ret
 00000184			VerifyHamming ENDP

				;
 00000184			GenerateHamming PROC
				;
				;
				;
				;
				;
				;
				;
 00000184			GH1:
 00000184  BA 00000081 R		mov edx, OFFSET buffer4
 00000189  E8 00000000 E		call WriteString
 0000018E  E8 00000000 E		call Crlf
 00000193  BA 0000014F R		mov edx, OFFSET DataArray
 00000198  B9 0000003A			mov ecx, SIZEOF DataArray
 0000019D  E8 00000000 E		call ReadString
 000001A2  A3 00000189 R		mov DataLength, eax
 000001A7  E8 00000000 E		call Crlf
					.IF DataLength < 2
 000001B5  BA 00000064 R			mov edx, OFFSET buffer3
 000001BA  E8 00000000 E			call WriteString
 000001BF  E8 00000000 E			call Crlf
 000001C4  EB BE				jmp GH1
					.ELSEIF DataLength <= 4
 000001D1  C7 05 0000018D R			mov HCLength, 3
	   00000003
					.ELSEIF DataLength <= 11
 000001E6  C7 05 0000018D R			mov HCLength, 4
	   00000004
					.ELSEIF DataLength <= 26
 000001FB  C7 05 0000018D R			mov HCLength, 5
	   00000005
					.ELSE
 00000207  C7 05 0000018D R			mov HCLength, 6
	   00000006
					.ENDIF
 00000211  BE 00000000			mov esi, 0
					.REPEAT
 00000216  8A 86 0000014F R			mov al, DataArray[esi]
						.IF !(al == 30h || al == 31h)
							.BREAK
						.ENDIF
 00000226  46					inc esi
					.UNTIL esi == DataLength
					.IF esi != DataLength
 00000237  BA 00000064 R			mov edx, OFFSET buffer3
 0000023C  E8 00000000 E			call WriteString
 00000241  E8 00000000 E			call Crlf
 00000246  E9 FFFFFF39				jmp GH1
					.ENDIF
 0000024B  BE 00000000			mov esi, 0
 00000250  BF 00000000			mov edi, 0
 00000255  C6 87 0000010B R		mov CodedArray[edi], 30h
	   30
 0000025C  47				inc edi
 0000025D  C6 87 0000010B R		mov CodedArray[edi], 30h
	   30
 00000264  47				inc edi
					.REPEAT
						.IF DataArray[esi] == 30h
 0000026E  C6 87 0000010B R				mov CodedArray[edi], 30h
	   30
						.ELSE
 00000277  C6 87 0000010B R				mov CodedArray[edi], 31h
	   31
						.ENDIF
 0000027E  46					inc esi
 0000027F  47					inc edi
						.IF edi == 3 || edi == 7 || edi == 15 || edi == 31
 00000294  C6 87 0000010B R				mov CodedArray[edi], 30h
	   30
 0000029B  47						inc edi
						.ENDIF
					.UNTIL esi == DataLength
 000002A4  C6 87 0000010B R		mov CodedArray[edi], 0
	   00
 000002AB  A1 00000189 R		mov eax, DataLength
 000002B0  03 05 0000018D R		add eax, HCLength
 000002B6  A3 0000014B R		mov CodedLength, eax
 000002BB  B8 00000000			mov eax, 0
 000002C0  B9 00000000			mov ecx, 0
					.REPEAT
 000002C5  8A 99 0000010B R			mov bl, CodedArray[ecx]
 000002CB  41					inc ecx
						.IF bl == 31h
 000002D1  33 C1					xor eax, ecx
						.ENDIF
					.UNTIL ecx == CodedLength
 000002DB  E8 00000000 E		call WriteBin
 000002E0  E8 00000000 E		call Crlf
 000002E5  B9 00000000			mov ecx, 0
					.REPEAT
 000002EA  0F A3 C8				bt eax, ecx
 000002ED  9C					pushfd
 000002EE  41					inc ecx
						.IF ecx == 1
 000002F4  9D						popfd
							.IF CARRY?
 000002F7  C6 05 0000010B R					mov CodedArray[0], 31h
	   31
							.ELSE
 00000303  C6 05 0000010B R					mov CodedArray[0], 30h
	   30
							.ENDIF
						.ELSEIF ecx == 2
 00000311  9D						popfd
							.IF CARRY?
 00000314  C6 05 0000010C R					mov CodedArray[1], 31h
	   31
							.ELSE
 0000031D  C6 05 0000010C R					mov CodedArray[1], 30h
	   30
							.ENDIF
						.ELSEIF ecx == 3
 0000032B  9D						popfd
							.IF CARRY?
 0000032E  C6 05 0000010E R					mov CodedArray[3], 31h
	   31
							.ELSE
 00000337  C6 05 0000010E R					mov CodedArray[3], 30h
	   30
							.ENDIF
						.ELSEIF ecx == 4
 00000345  9D						popfd
							.IF CARRY?
 00000348  C6 05 00000112 R					mov CodedArray[7], 31h
	   31
							.ELSE
 00000351  C6 05 00000112 R					mov CodedArray[7], 30h
	   30
							.ENDIF
						.ELSEIF ecx == 5
 0000035F  9D						popfd
							.IF CARRY?
 00000362  C6 05 0000011A R					mov CodedArray[15], 31h
	   31
							.ELSE
 0000036B  C6 05 0000011A R					mov CodedArray[15], 30h
	   30
							.ENDIF
						.ELSE
 00000374  9D						popfd
							.IF CARRY?
 00000377  C6 05 0000012A R					mov CodedArray[31], 31h
	   31
							.ELSE
 00000380  C6 05 0000012A R					mov CodedArray[31], 30h
	   30
							.ENDIF
						.ENDIF
					.UNTIL ecx == HCLength
 00000393  E8 00000001			call PrintHammingArray
 00000398  C3				ret
 00000399			GenerateHamming ENDP

 00000399			PrintHammingArray PROC
 00000399  B9 00000000			mov ecx, 0
 0000039E  BB 00000000			mov ebx, 0
					.REPEAT
 000003A3  8A 81 0000010B R			mov al, CodedArray[ecx]
 000003A9  E8 00000000 E			call WriteChar
 000003AE  41					inc ecx
 000003AF  43					inc ebx
						.IF ebx == 4
 000003B5  BB 00000000					mov ebx, 0
 000003BA  B0 20					mov al, ' '
 000003BC  E8 00000000 E				call WriteChar
						.ENDIF
					.UNTIL ecx == CodedLength
 000003C9  E8 00000000 E		call Crlf
 000003CE  C3				ret
 000003CF			PrintHammingArray ENDP
				end main
Microsoft (R) Macro Assembler Version 14.14.26429.4	    10/29/18 11:31:10
U10516045_ch6_2.asm					     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000019C DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000003CF DWord	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GenerateHamming  . . . . . . . .	P Near	 00000184 _TEXT	Length= 00000215 Public STDCALL
  GH1  . . . . . . . . . . . . .	L Near	 00000184 _TEXT	
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PrintHammingArray  . . . . . . .	P Near	 00000399 _TEXT	Length= 00000036 Public STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
VerifyHamming  . . . . . . . . .	P Near	 00000078 _TEXT	Length= 0000010C Public STDCALL
  VH1  . . . . . . . . . . . . .	L Near	 00000078 _TEXT	
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000078 Public STDCALL
  L0 . . . . . . . . . . . . . .	L Near	 00000000 _TEXT	
  L1 . . . . . . . . . . . . . .	L Near	 00000037 _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 00000045 _TEXT	
  L3 . . . . . . . . . . . . . .	L Near	 0000004D _TEXT	
  L4 . . . . . . . . . . . . . .	L Near	 00000067 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
ChoiceTable  . . . . . . . . . .	Byte	 00000192 _DATA	
CodedArray . . . . . . . . . . .	Byte	 0000010B _DATA	
CodedLength  . . . . . . . . . .	DWord	 0000014B _DATA	
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
DataArray  . . . . . . . . . . .	Byte	 0000014F _DATA	
DataLength . . . . . . . . . . .	DWord	 00000189 _DATA	
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
EntrySize  . . . . . . . . . . .	Number	 00000005h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HCLength . . . . . . . . . . . .	DWord	 0000018D _DATA	
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
NumberOfEntries  . . . . . . . .	Number	 00000002h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
buffer1  . . . . . . . . . . . .	Byte	 00000000 _DATA	
buffer2  . . . . . . . . . . . .	Byte	 00000016 _DATA	
buffer3  . . . . . . . . . . . .	Byte	 00000064 _DATA	
buffer4  . . . . . . . . . . . .	Byte	 00000081 _DATA	
buffer5  . . . . . . . . . . . .	Byte	 000000B7 _DATA	
buffer6  . . . . . . . . . . . .	Byte	 000000C8 _DATA	
buffer7  . . . . . . . . . . . .	Byte	 00000106 _DATA	
choice . . . . . . . . . . . . .	Byte	 00000191 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
red  . . . . . . . . . . . . . .	Number	 00000004h   
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   1 Warnings
	   0 Errors
