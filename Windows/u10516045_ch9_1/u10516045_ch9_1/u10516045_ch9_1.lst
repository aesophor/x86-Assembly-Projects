Microsoft (R) Macro Assembler Version 14.14.26429.4	    12/17/18 11:12:22
u10516045_ch9_1.asm					     Page 1 - 1


				.386
				.model flat, stdcall
				.stack 4096
				ExitProcess proto, dwExitCode:dword
				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .MODEL flat, stdcall
C:\Irvine\SmallWin.inc(11) : warning A4011:multiple .MODEL directives found : .MODEL ignored
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

				GenerateString PROTO
				CopyString PROTO, source: PTR BYTE, destination: PTR BYTE, nchar: DWORD
				SearchChar PROTO, targetarray: PTR BYTE, found: PTR DWORD, nchar: DWORD, key: BYTE
				SetCursor PROTO, xpos: BYTE, ypos: BYTE
				SearchString PROTO, targetarray: PTR BYTE, pattern: PTR BYTE, nchar: DWORD
				CaseChange PROTO, targetarray: PTR BYTE

 00000000			.data
 00000000 BD D0 BF E9 A4	msg1	BYTE "請輸入字串處理選項: (1) 產生 (2) 複製 (3) 字元搜尋 (4) 字串搜尋 (5) 大小寫轉換 (6) 結束: ", 0
	   4A A6 72 A6 EA
	   B3 42 B2 7A BF
	   EF B6 B5 3A 20
	   28 31 29 20 B2
	   A3 A5 CD 20 28
	   32 29 20 BD C6
	   BB 73 20 28 33
	   29 20 A6 72 A4
	   B8 B7 6A B4 4D
	   20 28 34 29 20
	   A6 72 A6 EA B7
	   6A B4 4D 20 28
	   35 29 20 A4 6A
	   A4 70 BC 67 C2
	   E0 B4 AB 20 28
	   36 29 20 B5 B2
	   A7 F4 3A 20 00
 0000005A 00			choice	BYTE ?
 0000005B 31 32 33 34 35	msg2	BYTE "1234567890", 0
	   36 37 38 39 30
	   00
 00000066  00000046 [		msg3	BYTE 70 DUP(32), 0
	    20
	   ] 00
 000000AD  00000046 [		msg4	BYTE 70 DUP(32), 0
	    20
	   ] 00
 000000F4 BD D0 BF E9 A4	msg5	BYTE "請輸入要搜尋的字: ", 0
	   4A AD 6E B7 6A
	   B4 4D AA BA A6
	   72 3A 20 00
 00000107 4E 6F 74 20 66	msg6	BYTE "Not found", 0
	   6F 75 6E 64 00
 00000111 B7 6A B4 4D AA	msg7	BYTE "搜尋的字在位置: ", 0
	   BA A6 72 A6 62
	   A6 EC B8 6D 3A
	   20 00
 00000122			msg8	BYTE 11 DUP(0)
 0000012D 00000000		nbyte	DWORD ?
 00000131 BD D0 BF E9 A4	msg9	BYTE "請輸入要搜尋的字串(最多10字): ", 0
	   4A AD 6E B7 6A
	   B4 4D AA BA A6
	   72 A6 EA 28 B3
	   CC A6 68 31 30
	   A6 72 29 3A 20
	   00
 00000150 4E 6F 20 73 75	msgfail	BYTE "No such option, please retry.", 0
	   63 68 20 6F 70
	   74 69 6F 6E 2C
	   20 70 6C 65 61
	   73 65 20 72 65
	   74 72 79 2E 00
 0000016E  00000050 [		blankln	BYTE 80 DUP(32), 0
	    20
	   ] 00
 000001BF 00000000		result	DWORD ?

 00000000			.code
 00000000			main PROC
 00000000			TOP:
					invoke SetCursor, 0, 0
 00000009  BA 00000000 R		mov edx, offset msg1
 0000000E  E8 00000000 E		call WriteString
 00000013  E8 00000000 E		call ReadChar
 00000018  E8 00000000 E		call Crlf
					.IF al < 49 || al > 54
 00000025  BA 00000150 R			mov edx, offset msgfail
 0000002A  E8 00000000 E			call WriteString
 0000002F  EB CF				jmp TOP
					.ENDIF
 00000031  BA 0000016E R		mov edx, offset blankln
 00000036  E8 00000000 E		call WriteString
 0000003B  2C 30			sub al, 48
 0000003D  A2 0000005A R		mov choice, al
					.IF al == 6
 00000046  E9 00000132				jmp FINISH
					.ELSEIF al == 5
						invoke CaseChange, ADDR msg4
 0000005E  B6 13				mov dh, 19
 00000060  B2 00				mov dl, 0
 00000062  E8 00000000 E			call Gotoxy
 00000067  BA 000000AD R			mov edx, offset msg4
 0000006C  E8 00000000 E			call WriteString
					.ELSEIF al == 4
						invoke SetCursor, 0, 2
 00000083  BA 0000016E R			mov edx, offset blankln
 00000088  E8 00000000 E			call WriteString
						invoke setcursor, 0, 2
 00000096  BA 00000131 R			mov edx, offset msg9
 0000009B  E8 00000000 E			call WriteString
 000000A0  BA 00000122 R			mov edx, offset msg8
 000000A5  B9 0000000B				mov ecx, sizeof msg8
 000000AA  E8 00000000 E			call ReadString
 000000AF  A3 0000012D R			mov nbyte, eax
						invoke SearchString, addr msg4, addr msg8, nbyte
					.ELSEIF al == 3
						invoke SetCursor, 0, 2
 000000DF  BA 000000F4 R			mov edx, offset msg5
 000000E4  E8 00000000 E			call WriteString
 000000E9  E8 00000000 E			call ReadChar
 000000EE  E8 00000000 E			call Crlf
						invoke SetCursor, 0, 3
 000000FC  BA 0000016E R			mov edx, offset blankln
 00000101  E8 00000000 E			call WriteString
						invoke SearchChar, addr msg4, addr result, 70, al
						invoke SetCursor, 0, 2
 00000121  BA 0000016E R			mov edx, offset blankln
 00000126  E8 00000000 E			call WriteString
						.IF result > 70
 00000134  BA 00000107 R				mov edx, offset msg6
 00000139  E8 00000000 E				call WriteString
						.ELSE
 00000140  BA 00000111 R				mov edx, offset msg7
 00000145  E8 00000000 E				call WriteString
 0000014A  A1 000001BF R				mov eax, result
 0000014F  40						inc eax
 00000150  E8 00000000 E				call WriteDec
						.ENDIF
 00000155  E8 00000000 E			call Crlf
					.ELSEIF al == 2
						invoke CopyString, addr msg3, addr msg4, 70
					.ELSE
						invoke GenerateString
					.ENDIF
 00000178  E9 FFFFFE83			jmp TOP

 0000017D			FINISH:
 0000017D  E8 00000000 E		call Crlf
 00000182  E8 00000000 E		call WaitMsg
					invoke ExitProcess, 0
 0000018E			main ENDP

 0000018E			SetCursor PROC uses edx,
							xpos: BYTE, ypos: BYTE
 00000192  8A 75 0C			mov dh, ypos
 00000195  8A 55 08			mov dl, xpos
 00000198  E8 00000000 E		call Gotoxy
					ret
 000001A2			SetCursor ENDP

 000001A2			GenerateString PROC uses edx ecx esi eax
 000001A6  B6 14			mov dh, 20
 000001A8  B2 00			mov dl, 0
 000001AA  E8 00000000 E		call Gotoxy
 000001AF  BA 0000005B R		mov edx, offset msg2
 000001B4  B9 00000007			mov ecx, 7
 000001B9			L0:
 000001B9  E8 00000000 E		call WriteString
 000001BE  E2 F9			loop L0
 000001C0  E8 00000000 E		call Crlf
 000001C5  BE 00000066 R		mov esi, offset msg3
 000001CA  B9 00000046			mov ecx, 70
 000001CF  E8 00000000 E		call Randomize
 000001D4			L1:
 000001D4  B8 0000003C			mov eax, 60
 000001D9  E8 00000000 E		call RandomRange
					.IF eax < 26
 000001E3  04 41				add al, 65
					.ELSEIF eax < 34
 000001EC  B0 20				mov al, 32
					.ELSE
 000001F0  04 3F				add al, 63
					.ENDIF
 000001F2  88 06			mov [esi], al
 000001F4  46				inc esi
 000001F5  E2 DD			loop L1
 000001F7  BA 00000066 R		mov edx, offset msg3
 000001FC  E8 00000000 E		call WriteString

					ret
 00000206			GenerateString ENDP

 00000206			CopyString PROC uses esi edi ecx edx,
							source: PTR BYTE, destination: PTR BYTE, nchar: DWORD
 0000020D  FC				cld
 0000020E  8B 75 08			mov esi, source
 00000211  8B 7D 0C			mov edi, destination
 00000214  8B 4D 10			mov ecx, nchar
 00000217  F3/ A4			rep movsb
 00000219  B6 13			mov dh, 19
 0000021B  B2 00			mov dl, 0
 0000021D  E8 00000000 E		call Gotoxy
 00000222  8B 55 0C			mov edx, destination
 00000225  E8 00000000 E		call WriteString

					ret
 00000232			CopyString ENDP

 00000232			SearchChar PROC uses edi esi ecx eax,
							targetarray: PTR BYTE, found: PTR DWORD, nchar: DWORD, key: BYTE
 00000239  8B 75 0C			mov esi, found
 0000023C  C7 06 FFFFFFFF		mov DWORD PTR [esi], 0FFFFFFFFh
 00000242  8B 7D 08			mov edi, targetarray
 00000245  8B 4D 10			mov ecx, nchar
 00000248  8A 45 14			mov al, key
 0000024B  FC				cld
 0000024C  F2/ AE			repne scasb
 0000024E  75 06			jnz QUIT
 00000250  4F				dec edi
 00000251  2B 7D 08			sub edi, targetarray
 00000254  89 3E			mov DWORD PTR [esi], edi
 00000256			QUIT:
					ret
 0000025E			SearchChar ENDP

 0000025E			SearchString PROC uses esi edi ecx ebx edx,
								targetarray: PTR BYTE, pattern: PTR BYTE, nchar: DWORD
								LOCAL temp1: DWORD, temp2: DWORD, tempaddr: DWORD
					invoke SetCursor, 0, 3
 00000272  BA 0000016E R		mov edx, offset blankln
 00000277  E8 00000000 E		call WriteString
					invoke SetCursor, 0, 3
 00000285  FC				cld
 00000286  C7 45 F8			mov temp2, 70
	   00000046
 0000028D  8B 75 0C			mov esi, pattern
 00000290  8B 7D 08			mov edi, targetarray
 00000293			SS3:
					invoke SearchChar, edi, ADDR temp1, temp2, BYTE PTR [esi]
					.IF temp1 > 70
 000002A9  EB 3D				jmp SS2
					.ELSE
 000002AD  8B 4D 10				mov ecx, nchar
 000002B0  03 7D FC				add edi, temp1
 000002B3  89 7D F4				mov tempaddr, edi
 000002B6  8B 5D FC				mov ebx, temp1
 000002B9  29 5D F8				sub temp2, ebx
 000002BC  F3/ A6				repe cmpsb
						.IF ZERO?
 000002C0  2B 7D 08					sub edi, targetarray
 000002C3  BA 00000111 R				mov edx, offset msg7
 000002C8  E8 00000000 E				call WriteString
 000002CD  8B C7					mov eax, edi
 000002CF  40						inc eax
 000002D0  2B 45 10					sub eax, nchar
 000002D3  E8 00000000 E				call WriteDec
 000002D8  EB 18					jmp SS1
						.ELSE
 000002DC  8B 7D F4					mov edi, tempaddr
 000002DF  47						inc edi
 000002E0  FF 4D F8					dec temp2
 000002E3  8B 75 0C					mov esi, pattern
 000002E6  EB AB					jmp SS3
						.ENDIF
					.ENDIF
 000002E8			SS2:
 000002E8  BA 00000107 R		mov edx, offset msg6
 000002ED  E8 00000000 E		call WriteString
 000002F2			SS1:
					ret
 000002FB			SearchString ENDP

 000002FB			CaseChange PROC uses esi edi ecx eax,
							targetarray: PTR BYTE
 00000302  FC				cld
 00000303  8B 75 08			mov esi, targetarray
 00000306  8B 7D 08			mov edi, targetarray
 00000309  B9 00000046			mov ecx, 70
 0000030E			CC1:
 0000030E  AC				lodsb
					.IF al >= 65 && al <= 90
 00000317  04 20				add al, 32
					.ELSEIF al >= 97 && al <= 122
 00000323  2C 20				sub al, 32
					.ENDIF
 00000325  AA				stosb
 00000326  E2 E6			loop CC1
					ret
 00000330			CaseChange ENDP

				END main
Microsoft (R) Macro Assembler Version 14.14.26429.4	    12/17/18 11:12:22
u10516045_ch9_1.asm					     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000001C3 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000330 DWord	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CaseChange . . . . . . . . . . .	P Near	 000002FB _TEXT	Length= 00000035 Public STDCALL
  targetarray  . . . . . . . . .	DWord	 bp + 00000008
  CC1  . . . . . . . . . . . . .	L Near	 0000030E _TEXT	
CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CopyString . . . . . . . . . . .	P Near	 00000206 _TEXT	Length= 0000002C Public STDCALL
  source . . . . . . . . . . . .	DWord	 bp + 00000008
  destination  . . . . . . . . .	DWord	 bp + 0000000C
  nchar  . . . . . . . . . . . .	DWord	 bp + 00000010
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GenerateString . . . . . . . . .	P Near	 000001A2 _TEXT	Length= 00000064 Public STDCALL
  L0 . . . . . . . . . . . . . .	L Near	 000001B9 _TEXT	
  L1 . . . . . . . . . . . . . .	L Near	 000001D4 _TEXT	
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SearchChar . . . . . . . . . . .	P Near	 00000232 _TEXT	Length= 0000002C Public STDCALL
  targetarray  . . . . . . . . .	DWord	 bp + 00000008
  found  . . . . . . . . . . . .	DWord	 bp + 0000000C
  nchar  . . . . . . . . . . . .	DWord	 bp + 00000010
  key  . . . . . . . . . . . . .	Byte	 bp + 00000014
  QUIT . . . . . . . . . . . . .	L Near	 00000256 _TEXT	
SearchString . . . . . . . . . .	P Near	 0000025E _TEXT	Length= 0000009D Public STDCALL
  targetarray  . . . . . . . . .	DWord	 bp + 00000008
  pattern  . . . . . . . . . . .	DWord	 bp + 0000000C
  nchar  . . . . . . . . . . . .	DWord	 bp + 00000010
  temp1  . . . . . . . . . . . .	DWord	 bp - 00000004
  temp2  . . . . . . . . . . . .	DWord	 bp - 00000008
  tempaddr . . . . . . . . . . .	DWord	 bp - 0000000C
  SS3  . . . . . . . . . . . . .	L Near	 00000293 _TEXT	
  SS2  . . . . . . . . . . . . .	L Near	 000002E8 _TEXT	
  SS1  . . . . . . . . . . . . .	L Near	 000002F2 _TEXT	
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetCursor  . . . . . . . . . . .	P Near	 0000018E _TEXT	Length= 00000014 Public STDCALL
  xpos . . . . . . . . . . . . .	Byte	 bp + 00000008
  ypos . . . . . . . . . . . . .	Byte	 bp + 0000000C
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000018E Public STDCALL
  TOP  . . . . . . . . . . . . .	L Near	 00000000 _TEXT	
  FINISH . . . . . . . . . . . .	L Near	 0000017D _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blankln  . . . . . . . . . . . .	Byte	 0000016E _DATA	
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
choice . . . . . . . . . . . . .	Byte	 0000005A _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
msg1 . . . . . . . . . . . . . .	Byte	 00000000 _DATA	
msg2 . . . . . . . . . . . . . .	Byte	 0000005B _DATA	
msg3 . . . . . . . . . . . . . .	Byte	 00000066 _DATA	
msg4 . . . . . . . . . . . . . .	Byte	 000000AD _DATA	
msg5 . . . . . . . . . . . . . .	Byte	 000000F4 _DATA	
msg6 . . . . . . . . . . . . . .	Byte	 00000107 _DATA	
msg7 . . . . . . . . . . . . . .	Byte	 00000111 _DATA	
msg8 . . . . . . . . . . . . . .	Byte	 00000122 _DATA	
msg9 . . . . . . . . . . . . . .	Byte	 00000131 _DATA	
msgfail  . . . . . . . . . . . .	Byte	 00000150 _DATA	
nbyte  . . . . . . . . . . . . .	DWord	 0000012D _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
result . . . . . . . . . . . . .	DWord	 000001BF _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   1 Warnings
	   0 Errors
